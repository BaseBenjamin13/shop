
User stories:
As a user I want to start at a homepage where top rated, newly added, and on-sale items are on display.✅
As a user I want the navigation to be easy with a nav bar. ✅
As a user I want to be able to like/add items to my wish list. ✅
As a user I want to be able to contact reviewers for help, customer support.
As a user I want the site to be mobile responsive.
As a user I want to be able to see Ben's review and other’s reviews under items for sale.✅
As a user i want to be able to register for an account. ✅
As a user i want to be able to login/logout to my account. ✅
If logged in as a user I want to be able to add my own review. ✅
If logged in as a user I want to add images to my review. 
If logged in as a user I want to be able to edit and delete my own review. ✅
If logged in as a user I want to see my orders, orderHistory. ✅

ADDED SCRETCH:
    on profile page let user pick what color the mini rectangles in background will be.




July 1st:
    make Headphone model, serializer, url, and view. ✅
    make HeadPhone page in react. ✅
    add "ben's choice" Keyboard to homepage. ✅
    add "ben's choice" Mouse to homepage. ✅
    add "ben's choice" Headphones to homepage. ✅
    make monitor by id api route. ✅
    make monitor detail page. ✅



July 2nd:
    make keyboard by id api route. ✅
    make keyboard detail page. ✅
    make mouses by id api route. ✅
    make mouses detail page. ✅
    make headphones by id api route. ✅
    make headphones detail page. ✅
    update all api calls for top choices, featured items to use by id route. ✅
    take styling off all Link tags. ✅
    style detail pages. ✅

July 3rd:
    basic footer add into index.js. ✅
    on detailed page display images in carousel. ✅
    make img modal component. ✅
    style and position image modal. ✅

July 4th:
    Create Review model. ✅
    make review in admin to list out to detail page. ✅

July 5th:
    style and position reviews. ✅
    make create Review route.  ✅
    build create review on react side. ✅
    Make create monitor review form. ✅
    make item model remove all other models. ✅
    make route for monitors and display too react. ✅
    make route for keyboards and display too react. ✅
    make route for mouses and display too react. ✅
    make route for headphones and display too react. ✅
    make create Review route AGAIN. ✅
    build create review on react side AGAIN. ✅
    make review with form, test on every category. ✅


July 6th:
    build delete route. ✅
    build delete review on react side. ✅
    build update review route. ✅
    build update review on react side. ✅
    force refresh to see reviews, maybe use useNavigate. ✅ 

July 7th:
    create user on backend ✅
    login user on backend ✅
    access user through get route using token in headers. ✅
    logout user on backend ✅
    finish tutorial on django user auth ✅
    react-make login icon/button in navbar. ✅
    react-make login page. ✅
    react-make login form, bottom of form make register button. ✅
    react-make make register page. ✅
    react-make make register form. ✅
    make post, register a user through react. ✅
    figure out a way to make mother or external react component for user. ✅

July 8th:
    Login form send login info to knox and save user in UserState. ✅
    worked on navbar and homepage mobile responsive, deleted homepage css files into one.✅
    make profile page. ✅
    profile page get user, display info to page. ✅
    added on hover reflective icons ✅
    login icon goes too profile, but if user is not loggedin navigate too login. ✅
    make logout button and functionality. ✅
    style the logout button and user info container. ✅
    style register form. ✅

July 9th:
    Deploy front-end. ✅
    style login page. ✅
    restrict create review to logged in users. ✅
    get user and create review, test while not/is logged in. ✅

July 10th: 
    "login to create review" if logged in show create review form. ✅
    Link User to review they create. ✅
    reconfigure create review to relate to logged in users. ✅
    make delete and edit review route required authentication. ✅
    hide delete and edit button unless user logged in = review author ✅
    style reviews form, buttons, min/max on rating input. ✅
    style description on detailed item page. ✅
    look up how to keep user/context api when refresh/fix bug. ✅
    fixed logout on refresh bug, got data everytime you edit, create, del reviews.✅
    style reviews. ✅

July 12th:
    style edit form. ✅
    make edit review form start with review info. ✅
    use local storage for user. ✅

July 13th:
    fix infinite reload bug on edit. ✅

July 14th:
    figure out how ManyToMany works as a field. ✅
    make wish list model. ✅
    make wishlist page setup in react. ✅
    after logged in get users wishlists. ✅
    make wishlist component, render name and number of items. ✅
    make go to btn give index to state to render correct component. ✅
    make wishlistDetail component. ✅
    make component for each item that making api call to item url. ✅
    make back button and functionality. ✅
    build out item display in wishlist. ✅
    style wishlist. ✅
    make create wishlist form. ✅
    add create wishlist functionality. ✅
    add on hover to all wishlist buttons. ✅
    make delete wishlist button and functionality. ✅
    style delete wishlist button, and wishlist component. ✅

July 15th:
    make add wishlist component add into item info container. ✅
    if loged in display users wishlist names to item info container. ✅ 
    make and style add to wishlist button next too button. ✅ 
    style wishlists and layout in itemDetails info container. ✅ 
    add functionality to button, adds wishlist too item's Wishlists. ✅
    add if statements to display correct links if user not logedin or no wishlists.✅
    make remove item from wishlist button and functionality on wishlist. ✅
    style remove item button and item img in wishlist. ✅
    add 404 page not found in react. ✅

July 16th:
    make profile page mobile responsive. ✅
    plan out cart system and model. ✅
    make cart model and add ManyToMany field for cart too items. ✅
    make serializer for cart, and add to other serializers. ✅
    make views and urls for cart, test in admin and postman. ✅
    make cart view that grabs a order completed false, test in postman. ✅
    client side, make page setup for cart. ✅

July 17th:
    get users cart, set it too local storage and UserContext. ✅
    add a font. ✅
    make cart items component that cart maps through and displays items. ✅
    use url from cart to get items and display them. ✅
    On Item get current cart and make add to cart button. ✅
    make add too cart functionality. ✅
    get cart on cart page load and set local storage, ✅
        note: currently need to relogin to see updated cart. ✅
    added functionality to update cart, when adding to cart, updates total and items. ✅
    add remove item from cart functionality. ✅
    fixed cart rendering new item, refresh needed. ✅
    Style add to cart btn. ✅
    fixed massive bug, site would shut down when newly logged in user tried to get cart. ✅
    create a new cart on register. ✅

July 19th:
    style checkout button. ✅
    add a my cart button on profile page. ✅
    checkout button that changes order_complete to true and makes new cart. ✅
    deploy back-end. ✅
    make seed items on heroku. ✅
    make front-end env for REACT_APP_IS_DEPLOYED and set in netlify. ✅
    put switch statements on each react route too use deployed backend. ✅
    redeploy front-end. ✅

July 20th:
    make order History page setup with links to. ✅
    make backend route and view for complete orders. ✅
    get and set state all order_complete true. ✅
    map through all orders displaying component for each. ✅
    get and display each item in order. ✅

July 21st:
    make item detail page mobile responsive. ✅
    make category page mobile responsive. ✅
    make cart page mobile responsive. ✅
    make order history page mobile responsive. ✅
    redeploy back-end. ✅
    redeploy front-end. ✅

July 22th:
    look into paypal's react package. ✅
    setting up paypal show button and component. ✅
    user can checkout with paypal. ✅
    after paypal checkout, reset cart and send to order history. ✅
    style paypal placement.
    make wishlists page mobile responsive.


    when adding a dulplicate to cart it adds too total but dosent put another item in the cart.

    stop using getItems functions. use window.location.reload. MAYBE
    fix delete route, delete route dosent work right after edit. 



    make readme.


Bugs:
    #1 ✅
    creating review logs user out, might be because of forced refresh:
        Solution: maybe replace window.reload with navigate.
        but refresh still will log user out, figure out how to keep user logged in.
    fixed:
        to keep user logged in at the end of each crud action i get the data again.
    More permanent fix:
        Use session storage, or local storage.
        Used local storage.

    #2 
    when adding a dulplicate to cart it adds too total but dosent put another item in the cart.



IDEAS: 
    Color wheel to choose there own profile color.
        <input type="color" id="colorTheme" value={registerForm.colorTheme}></input>
        also: type="date" to store birthdate, or "file" for profile img.






 